# Generated by Django 3.0 on 2022-02-02 13:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product-images/secondary', verbose_name='secondary product image')),
            ],
        ),
        migrations.CreateModel(
            name='product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='product name')),
                ('slug', models.SlugField(verbose_name='product slug')),
                ('description', models.TextField(verbose_name='product description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=2, verbose_name='product price')),
                ('main_image', models.ImageField(upload_to='product-images/', verbose_name='main product image')),
                ('physical_item', models.BooleanField(default=True, verbose_name='is item physical')),
                ('in_stock', models.BigIntegerField(default=0, verbose_name='products in stock')),
                ('seo_name', models.CharField(max_length=250, verbose_name='seo name')),
                ('seo_description', models.TextField(verbose_name='seo description')),
                ('separate_options_price', models.BooleanField(default=False, help_text='if checked this will give each option an individual price, otherwise the options will inherit the price from the product', verbose_name='options are priced separately')),
            ],
        ),
        migrations.CreateModel(
            name='product_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='category name')),
                ('description', models.TextField(verbose_name='category description')),
                ('main_image', models.ImageField(upload_to='category-images', verbose_name='category image')),
            ],
        ),
        migrations.CreateModel(
            name='tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='tag name')),
                ('color', models.CharField(default='#ffffff', max_length=7, verbose_name='tag color')),
                ('text_color_dark', models.BooleanField(default=True, verbose_name='dark text')),
            ],
        ),
        migrations.CreateModel(
            name='product_package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='package name')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=2, verbose_name='package price')),
                ('products', models.ManyToManyField(to='product.product', verbose_name='package products')),
            ],
        ),
        migrations.CreateModel(
            name='product_option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='option name')),
                ('main_image', models.ImageField(upload_to='product-images/options', verbose_name='main product image')),
                ('price', models.DecimalField(decimal_places=2, default=0, help_text='if left empty price will be same as product', max_digits=2, verbose_name='option price')),
                ('physical_item', models.BooleanField(default=True, verbose_name='is item physical')),
                ('in_stock', models.BigIntegerField(default=0, verbose_name='in stock')),
                ('secondary_images', models.ManyToManyField(to='product.image', verbose_name='product secondary images')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.product_category', verbose_name='product category'),
        ),
        migrations.AddField(
            model_name='product',
            name='options',
            field=models.ManyToManyField(to='product.product_option', verbose_name='product options'),
        ),
        migrations.AddField(
            model_name='product',
            name='secondary_images',
            field=models.ManyToManyField(to='product.image', verbose_name='product secondary images'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(to='product.tag'),
        ),
        migrations.CreateModel(
            name='configured_product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.BigIntegerField(verbose_name='amount')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='product')),
            ],
        ),
    ]
